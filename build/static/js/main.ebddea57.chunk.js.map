{"version":3,"sources":["logo.svg","header/Header.js","home/Home.js","about/About.js","undo-redo/UndoRedo.js","tasks/Tasks.js","main/Main.js","app/App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","Link","to","Home","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hat","_this2","src","logo","alt","Home_HatSwitcher","onHatChanged","setState","Home_ThinkerWithHat","ContactsList","Component","Hat","_ref","url","type","Thinker","ThinkerWithHat","_ref2","Home_Thinker","Home_Hat","HatSwitcher","_ref3","onChange","e","target","value","CONTACTS","id","name","phoneNumber","image","Contact","createReactClass","displayName","render","width","height","getInitialState","displayedContacts","handleSearch","event","searchQuery","toLowerCase","filter","el","indexOf","placeholder","map","key","About","colors","grid","Array","from","index","grids","color","Color","divStyle","background","selected","boxShadow","style","onClick","select","bind","Cell","shouldComponentUpdate","nextProps","columnId","clear","onMouseOver","rowId","Row","columns","row","get","column","i","toArray","Drawing","rows","onMouseDown","setDrawing","onMouseUp","Colors","_this3","History","data","item","Draw","history","Immutable","List","future","items","fromJS","isDrawing","drawing","size","push","updateColor","colId","_this4","newItems","updateIn","val","set","undo","pop","last","redo","disabled","UndoRedo","Task","edit","remove","deleteBlock","save","update","refs","newTxt","rendNorm","children","rendEdit","ref","defaultValue","cols","React","Tasks","add","text","arr","tasks","splice","updateText","eachTask","Tasks_Task","Main","Switch","Route","exact","path","component","App","header_Header","main_Main","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","HashRouter","app_App","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.ebddea57.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React from 'react'\nimport {Link} from 'react-router-dom'\n\nconst Header = () => (\n    <header>\n        <nav className=\"navbar navbar-light bg-faded\">\n            <div className=\"navbar-nav mra-navbar-nav\">\n                <Link className=\"nav-item nav-link\" to=\"/\">\n                    Home\n                </Link>\n                <Link className=\"nav-item nav-link\" to=\"/about\">\n                    About\n                </Link>\n                <Link className=\"nav-item nav-link\" to=\"/undo-redo\">\n                    Undo/Redo\n                </Link>\n                <Link className=\"nav-item nav-link\" to=\"/tasks\">\n                    Tasks\n                </Link>\n            </div>\n        </nav>\n    </header>\n)\n\nexport default Header\n","import React, {Component} from 'react'\nimport createReactClass from 'create-react-class'\nimport logo from './../logo.svg'\n\nclass Home extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {hat: 'cap'}\n    }\n\n    render() {\n        const onHatChanged = (hat) => {\n            this.setState({hat})\n        }\n\n        return (\n            <div className=\"App\">\n                <div className=\"App-header\">\n                    <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                    <h2>Welcome to React</h2>\n                </div>\n                <hr />\n                <div className=\"App-intro\">Hello!</div>\n                <hr />\n                <div>\n                    <HatSwitcher onHatChanged={onHatChanged} />\n                    <ThinkerWithHat hat={this.state.hat} />\n                </div>\n                <hr />\n                <div>\n                    <ContactsList />\n                </div>\n            </div>\n        )\n    }\n}\n\nconst Hat = ({type}) => {\n    let url = ''\n\n    switch (type) {\n    case 'cap':\n        url = '//i.imgur.com/98qjQGt.png'\n        break\n    case 'pirate':\n        url = '//i.imgur.com/c2Pt5t0.png'\n        break\n    case 'harry-potter':\n        url = '//i.imgur.com/WUgXevl.png'\n        break\n    case 'propeller':\n        url = '//i.imgur.com/tAoaDqe.png'\n        break\n    case 'leprecon':\n        url = '//i.imgur.com/vFBUhG4.png'\n        break\n    default:\n        url = ''\n        break\n    }\n\n    return <img src={url} alt=\"hat\" className=\"hat\" />\n}\n\nconst Thinker = () => <img className=\"thinker\" alt=\"thinker\" src=\"//i.imgur.com/WVhCgi2.png\" />\n\nconst ThinkerWithHat = ({hat}) => (\n    <div className=\"thinker-container\">\n        <Thinker />\n        <Hat type={hat} />\n    </div>\n)\n\nconst HatSwitcher = ({onHatChanged}) => (\n    <div>\n        Select a hat:\n        <select onChange={(e) => onHatChanged(e.target.value)}>\n            <option value=\"cap\">Cap</option>\n            <option value=\"pirate\">Pirate</option>\n            <option value=\"harry-potter\">Harry Potter</option>\n            <option value=\"propeller\">Propeller</option>\n            <option value=\"leprecon\">Leprecon</option>\n        </select>\n    </div>\n)\n\nconst CONTACTS = [\n    {\n        id: 1,\n        name: 'Darth Vader',\n        phoneNumber: '+250966666666',\n        image: '//s2.dmcdn.net/TYguR/60x60-dfD.png'\n    },\n    {\n        id: 2,\n        name: 'Princess Leia',\n        phoneNumber: '+250966344466',\n        image: '//s2.dmcdn.net/TYguR/60x60-dfD.png'\n    },\n    {\n        id: 3,\n        name: 'Luke Skywalker',\n        phoneNumber: '+250976654433',\n        image: '//s2.dmcdn.net/TYguR/60x60-dfD.png'\n    },\n    {\n        id: 4,\n        name: 'Chewbacca',\n        phoneNumber: '+250456784935',\n        image: '//s2.dmcdn.net/TYguR/60x60-dfD.png'\n    }\n]\n\nconst Contact = createReactClass({\n    render: function() {\n        return (\n            <li className=\"contact list-group-item\">\n                <img className=\"contact-image\" src={this.props.image} width=\"60px\" height=\"60px\" alt=\"user\" />\n                <div className=\"contact-info\">\n                    <div className=\"contact-name\"> {this.props.name} </div>\n                    <div className=\"contact-number\"> {this.props.phoneNumber} </div>\n                </div>\n            </li>\n        )\n    }\n})\n\nconst ContactsList = createReactClass({\n    getInitialState: function() {\n        return {\n            displayedContacts: CONTACTS\n        }\n    },\n    handleSearch: function(event) {\n        let searchQuery = event.target.value.toLowerCase()\n        let displayedContacts = CONTACTS.filter(function(el) {\n            let searchValue = el.name.toLowerCase()\n\n            return searchValue.indexOf(searchQuery) !== -1\n        })\n\n        this.setState({\n            displayedContacts: displayedContacts\n        })\n    },\n    render: function() {\n        return (\n            <div className=\"contacts\">\n                <div className=\"input-group d-block m-x-auto\">\n                    <input\n                        type=\"text\"\n                        placeholder=\"Search by name...\"\n                        className=\"search-field\"\n                        onChange={this.handleSearch}\n                    />\n                </div>\n                <br />\n                <ul className=\"contacts-list\">\n                    {this.state.displayedContacts.map(function(el) {\n                        return <Contact key={el.id} name={el.name} phoneNumber={el.phoneNumber} image={el.image} />\n                    })}\n                </ul>\n            </div>\n        )\n    }\n})\n\nexport default Home\n","import React from 'react'\n\nconst About = () => <div>Hello. My name is Dmitry.</div>\n\nexport default About\n","import React from 'react'\nimport createReactClass from 'create-react-class'\nimport Immutable from 'immutable'\n\nlet colors = ['#f44336', '#00bcd4', '#3f51b5', '#009688', '#cddc39', '#ffc107', '#607d8b', '#000']\n\nlet grid = Array.from(Array(64)).map((value, index) => {\n    return {\n        id: index,\n        grids: Array.from(Array(64)).map((value, index) => {\n            return {id: index, color: false}\n        })\n    }\n})\n\nlet Color = createReactClass({\n    render: function() {\n        let divStyle = {background: this.props.type}\n\n        if (this.props.type === this.props.selected) {\n            divStyle.boxShadow = '0 0 0 1px #fff,0 0 0 2px #659be0'\n        }\n\n        return (\n            <button className=\"color\" style={divStyle} onClick={this.props.select.bind(null, this.props.type)}>\n                &nbsp;\n            </button>\n        )\n    }\n})\n\nlet Cell = createReactClass({\n    shouldComponentUpdate: function(nextProps) {\n        return this.props.color !== nextProps.color\n    },\n\n    render: function() {\n        let divStyle = {background: this.props.color}\n\n        if (this.props.columnId === 0) {\n            divStyle.clear = 'right'\n        }\n\n        return (\n            <div\n                style={divStyle}\n                onMouseOver={this.props.onClick.bind(null, this.props.rowId, this.props.columnId)}\n                className=\"grid\"\n                id={this.props.columnId}\n            >\n                &nbsp;\n            </div>\n        )\n    }\n})\n\nlet Row = createReactClass({\n    render: function() {\n        let columns = this.props.row\n            .get('grids')\n            .map((column, i) => {\n                return (\n                    <Cell\n                        color={column.get('color')}\n                        key={i}\n                        onClick={this.props.onClick}\n                        columnId={column.get('id')}\n                        rowId={this.props.row.get('id')}\n                    />\n                )\n            })\n            .toArray()\n\n        return <div className=\"gridRow\">{columns}</div>\n    }\n})\n\nlet Drawing = createReactClass({\n    render: function() {\n        let rows = this.props.grid\n            .map((row, i) => {\n                return <Row row={row} key={i} onClick={this.props.onClick} />\n            })\n            .toArray()\n\n        return (\n            <div\n                className=\"draw\"\n                onMouseDown={this.props.setDrawing.bind(null, true)}\n                onMouseUp={this.props.setDrawing.bind(null, false)}\n            >\n                {rows}\n            </div>\n        )\n    }\n})\n\nlet Colors = createReactClass({\n    render: function() {\n        let colors = this.props.colors.map((color, i) => {\n            return <Color type={color} key={i} select={this.props.select} selected={this.props.selected} />\n        })\n\n        return <div className=\"colors\">{colors}</div>\n    }\n})\n\nlet History = createReactClass({\n    render: function() {\n        return (\n            <div className=\"history\">\n                {this.props.data.map((item, i) => {\n                    return <div key={i}>Updated Grid</div>\n                })}\n            </div>\n        )\n    }\n})\n\nlet Draw = createReactClass({\n    getInitialState: function() {\n        return {\n            colors: colors,\n            color: colors[0],\n            history: Immutable.List(),\n            future: Immutable.List(),\n            items: Immutable.fromJS(grid)\n        }\n    },\n\n    setDrawing: function(isDrawing) {\n        this.setState({drawing: isDrawing})\n\n        if (this.state.future.size > 0) {\n            this.setState({future: Immutable.List()})\n        }\n\n        if (!this.state.drawing) {\n            this.setState({history: this.state.history.push(this.state.items)})\n        }\n    },\n\n    updateColor: function(color) {\n        this.setState({color: color})\n    },\n\n    onClick: function(rowId, colId) {\n        if (!this.state.drawing) return\n        let newItems = this.state.items.updateIn([rowId, 'grids', colId], (val) => {\n            return val.set('color', this.state.color)\n        })\n\n        this.setState({\n            items: newItems\n        })\n    },\n\n    undo: function() {\n        if (this.state.history.size < 1) return\n        this.setState({\n            history: this.state.history.pop(),\n            future: this.state.future.push(this.state.items),\n            items: this.state.history.last()\n        })\n    },\n\n    redo: function() {\n        if (this.state.future.size < 1) return\n        this.setState({\n            items: this.state.future.last(),\n            history: this.state.history.push(this.state.items),\n            future: this.state.future.pop()\n        })\n    },\n\n    render: function() {\n        return (\n            <div>\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <h4>Colors:</h4>\n                            <Colors colors={this.state.colors} select={this.updateColor} selected={this.state.color} />\n                            <hr />\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <Drawing onClick={this.onClick} grid={this.state.items} setDrawing={this.setDrawing} />\n                        </div>\n                        <div className=\"col text-center\">\n                            <div className=\"btn-group\">\n                                <button\n                                    className=\"btn btn-primary\"\n                                    disabled={this.state.history.size < 1}\n                                    onClick={this.undo}\n                                >\n                                    Undo\n                                </button>\n                                <button\n                                    className=\"btn btn-primary\"\n                                    disabled={this.state.future.size < 1}\n                                    onClick={this.redo}\n                                >\n                                    Redo\n                                </button>\n                            </div>\n                            <History data={this.state.history} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n})\n\nconst UndoRedo = () => (\n    <div>\n        <Draw />\n    </div>\n)\n\nexport default UndoRedo\n","import React from 'react'\n\nclass Task extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            edit: false\n        }\n    }\n\n    edit = () => {\n        this.setState({edit: true})\n    }\n    remove = () => {\n        this.props.deleteBlock(this.props.index)\n    }\n    save = () => {\n        this.props.update(this.refs.newTxt.value, this.props.index)\n        this.setState({edit: false})\n    }\n    rendNorm = () => {\n        return (\n            <div className=\"box\">\n                <div className=\"text\">{this.props.children}</div>\n                <button onClick={this.edit} className=\"btn light\">\n                    Edit\n                </button>\n                <button onClick={this.remove} className=\"btn red\">\n                    Remove\n                </button>\n            </div>\n        )\n    }\n    rendEdit = () => {\n        return (\n            <div className=\"box\">\n                <textarea ref=\"newTxt\" defaultValue={this.props.children} name=\"\" id=\"\" cols=\"30\" rows=\"10\" />\n                <button onClick={this.save} className=\"btn success\">\n                    Save\n                </button>\n            </div>\n        )\n    }\n\n    render() {\n        if (this.state.edit) {\n            return this.rendEdit()\n        } else {\n            return this.rendNorm()\n        }\n    }\n}\n\nclass Tasks extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            tasks: []\n        }\n    }\n\n    add = (text) => {\n        let arr = this.state.tasks\n\n        arr.push(text)\n        this.setState({tasks: arr})\n    }\n    deleteBlock = (i) => {\n        let arr = this.state.tasks\n\n        arr.splice(i, 1)\n        this.setState({tasks: arr})\n    }\n    updateText = (text, i) => {\n        let arr = this.state.tasks\n\n        arr[i] = text\n        this.setState({tasks: arr})\n    }\n    eachTask = (item, i) => {\n        return (\n            <Task key={i} index={i} update={this.updateText} deleteBlock={this.deleteBlock}>\n                {item}\n            </Task>\n        )\n    }\n\n    render() {\n        return (\n            <div className=\"field\">\n                <button onClick={this.add.bind(null, 'Simple task')} className=\"btn new\">\n                    New task\n                </button>\n                {this.state.tasks.map(this.eachTask)}\n            </div>\n        )\n    }\n}\n\nexport default Tasks\n","import React from 'react'\nimport {Switch, Route} from 'react-router-dom'\nimport Home from '../home/Home'\nimport About from '../about/About'\nimport UndoRedo from '../undo-redo/UndoRedo'\nimport Tasks from '../tasks/Tasks'\n\nconst Main = () => (\n    <main>\n        <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/about\" component={About} />\n            <Route path=\"/undo-redo\" component={UndoRedo} />\n            <Route path=\"/tasks\" component={Tasks} />\n        </Switch>\n    </main>\n)\n\nexport default Main\n","import React from 'react'\nimport Header from '../header/Header'\nimport Main from '../main/Main'\n\nlet App = () => (\n    <div>\n        <Header />\n        <Main />\n    </div>\n)\n\nexport default App\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\nexport default function register() {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location)\n\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (!isLocalhost) {\n                // Is not local host. Just register service worker\n                registerValidSW(swUrl)\n            } else {\n                // This is running on localhost. Lets check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the old content will have been purged and\n                            // the fresh content will have been added to the cache.\n                            // It's the perfect time to display a \"New content is\n                            // available; please refresh.\" message in your web app.\n                            console.log('New content is available; please refresh.')\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n                        }\n                    }\n                }\n            }\n        })\n        .catch((error) => {\n            console.error('Error during service worker registration:', error)\n        })\n}\n\nfunction checkValidServiceWorker(swUrl) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            if (response.status === 404 || response.headers.get('content-type').indexOf('javascript') === -1) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl)\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.')\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister()\n        })\n    }\n}\n","import './index.css'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './app/App'\nimport registerServiceWorker from './registerServiceWorker'\nimport {HashRouter} from 'react-router-dom'\n\nReactDOM.render(\n    <HashRouter>\n        <App />\n    </HashRouter>,\n    document.getElementById('root')\n)\n\nregisterServiceWorker()\n"],"sourceRoot":""}